/*
Copyright 2014 i-nercya intelligent software

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using inercya.EntityLite.Builders;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Text;

namespace inercya.EntityLite.Providers
{
    public interface IEntityLiteProvider
    {
        string ParameterPrefix { get; }
        string StartQuote { get; }
        string EndQuote { get; }
        string DefaultSchema { get; set; }

        AutoGeneratedFieldFetchMode AutoGeneratedFieldFetchMode { get; }

        string DualTable { get; }

        string SequenceVariable { get; }

        string Concat(params string[] strs);

        string GetPagedQuery(AbstractQueryBuilder builder, DbCommand selectCommand, ref int paramIndex, int fromRowIndex, int toRowIndex);

        DbCommand GenerateInsertCommand(CommandBuilder commandBuilder, object entity);

        DbCommand CreateCommand();

        string GetNextValExpression(string fullSequenceName);

        void SetProviderTypeToParameter(IDbDataParameter parameter, int providerType);

    }
}
